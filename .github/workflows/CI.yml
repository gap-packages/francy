name: CI

# Trigger the workflow on push or pull request
on:
  push:
    branches:
      - master
      - develop
  pull_request:

# the `concurrency` settings ensure that not too many CI jobs run in parallel
concurrency:
  # group by workflow and ref; the last slightly strange component ensures that for pull
  # requests, we limit to 1 concurrent job, but for the default repository branch we don't
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.ref_name != github.event.repository.default_branch || github.run_number }}
  # Cancel intermediate builds, but only if it is a pull request build.
  cancel-in-progress: ${{ startsWith(github.ref, 'refs/pull/') }}

jobs:
  # The CI test job
  test_gap:
    name: ${{ matrix.gap-branch }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        gap-branch:
          - master
          - stable-4.15
          - stable-4.14
          - stable-4.13
          - stable-4.12

    steps:
      - name: Install ZMQ
        run: |
          sudo apt update && 
          sudo apt install libzmq3-dev -y
      - uses: actions/checkout@v5
      - uses: gap-actions/setup-gap@v2
        with:
          GAP_PKGS_TO_BUILD: "datastructures json uuid io profiling crypting zeromqinterface jupyterkernel"
          GAPBRANCH: ${{ matrix.gap-branch }}
      - uses: gap-actions/build-pkg@v1
      - uses: gap-actions/run-pkg-tests@v3
      - uses: gap-actions/run-pkg-tests@v3
        with:
          only-needed: true
      - uses: gap-actions/process-coverage@v2
      - uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  test_js:
    name: ${{ matrix.node-version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 19.x ]

    steps:
      - uses: actions/checkout@v5
      - name: Set up chromedriver
        run: |
          sudo apt update &&
          wget "https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb" -P /tmp &&
          sudo apt install -y "/tmp/google-chrome-stable_current_amd64.deb" -f
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip
      - run: pip install jupyterlab==4.0.1
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: 'https://registry.npmjs.org'
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn config get cacheFolder)" >> $GITHUB_OUTPUT
        shell: bash
        working-directory: js
      - name: Restore yarn cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: yarn-cache-folder-${{ hashFiles('**/yarn.lock', '.yarnrc.yml') }}
          restore-keys: |
            yarn-cache-folder-
      - run: yarn install --frozen-lockfile
        working-directory: js
      - run: yarn run lint
        working-directory: js
      - run: yarn run build:prod
        working-directory: js
      - run: yarn run test
        working-directory: js
      - uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  # The documentation job
  manual:
    name: Build manuals
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5
      - name: Install ZMQ
        run: |
          sudo apt update && 
          sudo apt install libzmq3-dev -y
      - uses: gap-actions/setup-gap@v2
        with:
          GAP_PKGS_TO_BUILD: "datastructures uuid json io crypting zeromqinterface jupyterkernel"
      - uses: gap-actions/build-pkg-docs@v1
        with:
          use-latex: 'true'
